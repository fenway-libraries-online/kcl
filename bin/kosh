#!/usr/bin/perl
# koha-shell -- put you in a shell with a koha environment set up
# Copyright 2012  Catalyst IT, Ltd
# Copyright 2018 Fenway Library Organization
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

use FindBin;
use Modern::Perl;
use Getopt::Long
    qw(:config posix_default gnu_compat require_order bundling no_ignore_case);

use lib "$FindBin::Bin/../lib", "$FindBin::Bin/../lib/perl";

my %opts;
my $res = GetOptions(
    \%opts,
    'help|h',
    'login|l',
    'preserve-environment|p|m',
    'verbose|v',
);

if ( !$res || $opts{help} ) {
    show_help( !$res );
    exit( !$res );
}

if ( !@ARGV ) {
    show_help( 1, "An instance name must be supplied." );
    exit(1);
}
my $instance = shift @ARGV;
if ( !-e "/etc/koha/sites/$instance" ) {
    show_help( 1, "The instance doesn't exist: $instance" );
    exit(1);
}
@ARGV = ($ENV{SHELL} || '/bin/sh') if !@ARGV;

# Now we're set up, build the 'su' command
my @cmd;
push @cmd, '/usr/bin/sudo';
push @cmd, '--preserve-env' if $opts{'preserve-environment'};
push @cmd, '--login' if $opts{login};
push @cmd, "-u", "$instance-koha";
push @cmd,
    "env",
    "KOHA_SITE=$instance",
    "KOHA_CONF=/etc/koha/sites/$instance/koha-conf.xml",
    "PERL5LIB=/usr/share/koha/lib";
push @cmd, "PATH=$ENV{PATH}" if $opts{'preserve-environment'};
push @cmd, @ARGV;

print STDERR "Command: @cmd\n" if $opts{verbose};
system(@cmd);
if ( $? == -1 ) {
    print STDERR "failed to execute: $!\n";
}
elsif ( $? & 127 ) {
    printf STDERR "child died with signal %d, %s coredump\n",
      ( $? & 127 ), ( $? & 128 ) ? 'with' : 'without';
}

sub show_help {
    my ( $err, $msg ) = @_;

    my $fh = $err ? *STDERR : *STDOUT;
    say $fh "Error: " . $msg if $msg;
    print $fh $_ while <DATA>;
}

__DATA__
kosh -- execute a shell or other program with your Koha environment set up

Usage: kosh [OPTION...] [INSTANCE] [COMMAND [ARG...]]

Options:
    -h, --help              show this help and quit
    -l, --login             make the shell a login shell
    -m, -p,
    --preserve-environment  do not reset environment variables
    -v, --verbose           output the full command that will be executed

The default shell is the one currently in use. Refer to su(1) for more detail
on these options.
